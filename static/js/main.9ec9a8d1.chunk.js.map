{"version":3,"sources":["components/Game.js","components/GamesList.js","components/PlayerSearch.js","containers/GamesContainer.js","App.js","reportWebVitals.js","index.js"],"names":["GameDiv","Styled","div","props","isExpansion","FlexDiv","DetailsDiv","StyledImage","img","Heading3","h3","Anchor","a","Game","game","href","gameId","name","src","thumbnail","alt","minPlayers","maxPlayers","playingTime","averageRating","toFixed","StyledDiv","GamesList","games","length","nodeList","map","key","PlayerSearch","handleUserSubmit","useState","playerName","setPlayerName","htmlFor","id","type","value","onChange","evt","target","onClick","preventDefault","Container","userGames","setUserGames","userName","setUserName","useEffect","getUser","fetch","result","json","data","filter","owned","expansions","submittedUserName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGMA,EAAUC,IAAOC,IAAV,8IACG,SAAAC,GAAK,OAAIA,EAAMC,YAAc,UAAY,aAQnDC,EAAUJ,IAAOC,IAAV,kFAMPI,EAAaL,IAAOC,IAAV,6EAKVK,EAAcN,IAAOO,IAAV,qDAIVC,EAAWR,IAAOS,GAAV,gDAGRC,EAASV,IAAOW,EAAV,0EA+BEC,EAzBF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAGb,OACE,kBAACd,EAAD,KACE,kBAACW,EAAD,CAAQI,KAAI,8CAAyCD,EAAKE,SAC1D,kBAACP,EAAD,KAAWK,EAAKG,OAEhB,kBAACZ,EAAD,KACE,kBAACE,EAAD,CAAaW,IAAKJ,EAAKK,UAAWC,IAAG,mBAAcN,EAAKG,QAExD,kBAACX,EAAD,KACA,6CAAmBQ,EAAKO,WAAxB,SAA0CP,EAAKQ,YAC/C,4CAAkBR,EAAKS,YAAvB,SACA,0CAAgBT,EAAKU,cAAcC,QAAQ,QC7C7CC,EAAYzB,IAAOC,IAAV,mGA6BAyB,EAvBG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAElB,IAAIA,EACF,MAAO,aAGT,GAAqB,IAAjBA,EAAMC,OACR,MAAO,iBAGT,IAAMC,EAAWF,EAAMG,KAAI,SAACjB,GAC1B,OAAO,kBAAC,EAAD,CAAMkB,IAAKlB,EAAKE,OAAQF,KAAMA,OAIvC,OACE,kBAACY,EAAD,KACGI,ICHQG,EAvBM,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBACrB,EAAoCC,mBAAS,iBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,8BACE,2BAAOC,QAAQ,sBACb,2BAAOC,GAAK,oBAAoBC,KAAK,OAAOC,MAAOL,EAAYM,SAb3C,SAACC,GACzBN,EAAcM,EAAIC,OAAOH,UAarB,2BAAOD,KAAK,SAASK,QAVN,SAACF,GACpBA,EAAIG,iBACJZ,EAAiBE,GACjBC,EAAc,KAOkCI,MAAM,kBCyB3CM,EAvCG,WAEd,MAAkCZ,mBAAS,MAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAgCd,mBAAS,MAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KAGAC,qBAAU,WACNC,MACD,CAACH,IAGJ,IAAMG,EAAO,uCAAG,gCAAAzC,EAAA,0DACVsC,EADU,iCAESI,MAAM,iDAAD,OAAkDJ,IAFhE,cAENK,EAFM,gBAGOA,EAAOC,OAHd,OAGNC,EAHM,OAIN7B,EAAQ6B,EAAKC,QAAO,SAAC5C,GACzB,OAAOA,EAAK6C,QAAU7C,EAAKV,eAEVqD,EAAKC,QAAO,SAAC5C,GAC9B,OAAOA,EAAK6C,OAAS7C,EAAK8C,cAG5BX,EAAarB,GAXD,4CAAH,qDAmBb,OACI,oCACI,kBAAC,EAAD,CAAcM,iBAND,SAAC2B,GACpBV,EAAYU,MAON,kBAAC,EAAD,CAAWjC,MAAOoB,MC7Bfc,MANf,WACE,OACI,kBAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ec9a8d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport Styled from 'styled-components'\r\n\r\nconst GameDiv = Styled.div`\r\n  background: ${props => props.isExpansion ? '#119DA4' : '#157F1F'};\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  width: 20em;\r\n  flex-grow: 1;\r\n  border-radius: 25px;\r\n`\r\n\r\nconst FlexDiv = Styled.div`\r\n  display: flex;\r\n  padding: 0.5em;\r\n  margin 0.5em;\r\n`\r\n\r\nconst DetailsDiv = Styled.div`\r\n  padding-left: 2em;\r\n  display: inline-block;\r\n `\r\n\r\nconst StyledImage = Styled.img`\r\n  object-fit: contain;\r\n `\r\n \r\n const Heading3 = Styled.h3`\r\n text-align: center;`\r\n\r\n const Anchor = Styled.a`\r\n  text-decoration: none; \r\n  color: White; \r\n `\r\n\r\n\r\nconst Game = ({game}) => {\r\n \r\n\r\n  return (\r\n    <GameDiv>\r\n      <Anchor href={`https://boardgamegeek.com/boardgame/${game.gameId}`}>\r\n      <Heading3>{game.name}</Heading3>\r\n      </Anchor>\r\n      <FlexDiv>\r\n        <StyledImage src={game.thumbnail} alt={`image of ${game.name}`} /> \r\n        \r\n        <DetailsDiv>\r\n        <p>Players - Min: {game.minPlayers} Max: {game.maxPlayers}</p> \r\n        <p>Playing Time: {game.playingTime} mins</p> \r\n        <p>Avg Rating: {game.averageRating.toFixed(2)}</p>\r\n        </DetailsDiv>\r\n      </FlexDiv>\r\n       \r\n      \r\n    </GameDiv>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Game","import React from 'react';\r\nimport Game from './Game'\r\n\r\nimport Styled from 'styled-components'\r\n\r\nconst StyledDiv = Styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly\r\n`\r\n\r\nconst GamesList = ({games}) => {\r\n\r\n  if(!games) {\r\n    return \"waiting...\"\r\n  }\r\n\r\n  if (games.length === 0){\r\n    return \"no games found\"\r\n  }\r\n  \r\n  const nodeList = games.map((game) => {\r\n    return <Game key={game.gameId} game={game}/>\r\n  })\r\n\r\n\r\n  return (\r\n    <StyledDiv >\r\n      {nodeList}\r\n    </StyledDiv>\r\n    \r\n  )\r\n}\r\n\r\nexport default GamesList","import React, {useState} from 'react'\r\n\r\nconst PlayerSearch = ({handleUserSubmit}) => {\r\n  const [playerName, setPlayerName] = useState(\"earthchild316\");\r\n\r\n  const handleInputChange = (evt) => {\r\n    setPlayerName(evt.target.value)\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    handleUserSubmit(playerName)\r\n    setPlayerName(\"\")\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"player-name-input\"></label>\r\n        <input id = \"player-name-input\" type=\"text\" value={playerName} onChange={handleInputChange} />\r\n        <input type=\"submit\" onClick={handleSubmit} value=\"user submit\"/>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nexport default PlayerSearch","import React, {useState, useEffect} from 'react'\r\nimport GamesList from '../components/GamesList'\r\nimport PlayerSearch from '../components/PlayerSearch'\r\nimport SearchFilter from '../components/SearchFilter'\r\n\r\nconst Container = () => {\r\n\r\n    const [userGames, setUserGames] = useState(null)\r\n    const [userName, setUserName] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [userName])\r\n\r\n\r\n    const getUser = async () => {\r\n      if (userName) {\r\n        const result = await fetch(`https://bgg-json.azurewebsites.net/collection/${userName}`)\r\n        const data = await result.json()\r\n        const games = data.filter((game) => {\r\n          return game.owned && !game.isExpansion\r\n        })\r\n        const expansions = data.filter((game) => {\r\n          return game.owned && game.expansions\r\n        })\r\n\r\n        setUserGames(games)\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (submittedUserName) => {\r\n      setUserName(submittedUserName);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PlayerSearch handleUserSubmit={handleSubmit}/>\r\n            {/* <SearchFilter></SearchFilter> */}\r\n            <GamesList games={userGames}></GamesList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Container","import React from 'react'\nimport './App.css';\nimport Container from './containers/GamesContainer';\n\nfunction App() {\n  return (\n      <Container/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}